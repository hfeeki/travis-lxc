#!/bin/bash

usage() {
  echo "Usage: `basename $0 .sh` [-c cmd_timeout] [-l log_timeout] [-m max_output] command"
  exit 1
}

args=`getopt c:l:m: $*`
[ $? != 0 ] && usage
set -- $args

cmd_timeout=1800
log_timeout=300
max_output=0

for i; do
  case $i in
    -c) cmd_timeout=$2; shift; shift;;
    -l) log_timeout=$2; shift; shift;;
    -m) max_output=$2; shift; shift;;
    --) shift; break;;
  esac
done

terminate() {
  killtree $pid > /dev/null 2>&1
  [[ $1 ]] && (echo; echo "$1 ... terminating."; echo)
  exit 1
}

tmp=$(mktemp /tmp/build.XXX)
exec > >(tee -a $tmp)
$@ <&0 &
pid=$!
trap "rm -f $tmp; terminate" EXIT

start=$(date +%s)
while ps aux | awk '{print $2 }' | grep -q $pid 2> /dev/null; do
  now=$(date +%s)
  cmd=$(expr $now - $start)
  log=$(expr $now - $([[ `uname` = 'Linux' ]] && stat -c %Y $tmp || stat -f %m $tmp))
  out=$([[ `uname` = 'Linux' ]] && stat -c %s $tmp || stat -f %z $tmp)

  [ $cmd_timeout -gt 0 -a $cmd -gt $cmd_timeout ] && terminate "Timed out after $cmd_timeout seconds"
  [ $log_timeout -gt 0 -a $log -gt $log_timeout ] && terminate "No log output for $log_timeout seconds"
  [ $max_output  -gt 0 -a $out -gt $max_output  ] && terminate "Log length exceeded $max_output bytes"
  sleep 1
done
